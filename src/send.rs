///! The goal of this module is to convert from `str` to `Input`s that should produce that string when put through SendInput

use phf::phf_map;

// SCANCODE_TO_KEY = {
//     59: 'F1', 60: 'F2', 61: 'F3', 62: 'F4', 63: 'F5', 64: 'F6',
//     65: 'F7', 66: 'F8', 67: 'F9', 68: 'F10', 87: 'F11', 88: 'F12',
//     41: '`', 2: '1', 3: '2', 4: '3', 5: '4', 6: '5', 7: '6', 8: '7',
//     9: '8', 10: '9', 11: '0', 12: '-', 13: '=', 16: 'q',
//     17: 'w', 18: 'e', 19: 'r', 20: 't', 21: 'y', 22: 'u', 23: 'i',
//     24: 'o', 25: 'p', 26: '[', 27: ']', 43: '\\',
//     30: 'a', 31: 's', 32: 'd', 33: 'f', 34: 'g', 35: 'h', 36: 'j',
//     37: 'k', 38: 'l', 39: ';', 40: '\'', 44: 'z', 45: 'x',
//     46: 'c', 47: 'v', 48: 'b', 49: 'n', 50: 'm', 51: ',',
//     52: '.', 53: '/', 57: 'space', 58: "BackSpace", 83: "Delete",
//     80: "Down", 79: "End", 1: "Escape", 71: "Home", 82: "Insert",
//     75: "Left", 73: "Page_Down", 81: "Page_Up", 28 : "Return",
//     77: "Right", 15: "Tab", 72: "Up",
// }

// static CHARS_TO_KEYCODES: phf::Map<char, u8> = phf_map! {
//     '1' =>   2u8,
//     '2' =>   3u8,
//     '3' =>   4u8,
//     '4' =>   5u8,
//     '5' =>   6u8,
//     '6' =>   7u8,
//     '7' =>   8u8,
//     '8' =>   9u8,
//     '9' =>  10u8,
//     '0' =>  11u8,
//     '-' =>  12u8,
//     '=' =>  13u8,

//     'q' =>  16u8,
//     'w' =>  17u8,
//     'e' =>  18u8,
//     'r' =>  19u8,
//     't' =>  20u8,
//     'y' =>  21u8,
//     'u' =>  22u8,
//     'i' =>  23u8,
//     'o' =>  24u8,
//     'p' =>  25u8,
//     '[' =>  26u8,
//     ']' =>  27u8,

//     'a' =>  30u8,
//     's' =>  31u8,
//     'd' =>  32u8,
//     'f' =>  33u8,
//     'g' =>  34u8,
//     'h' =>  35u8,
//     'j' =>  36u8,
//     'k' =>  37u8,
//     'l' =>  38u8,
//     ';' =>  39u8,
//     '\''=>  40u8,
//     '`' =>  41u8,

//     '\\'=>  43u8,
//     'z' =>  44u8,
//     'x' =>  45u8,
//     'c' =>  46u8,
//     'v' =>  47u8,
//     'b' =>  48u8,
//     'n' =>  49u8,
//     'm' =>  50u8,
//     ',' =>  51u8,
//     '.' =>  52u8,
//     '/' =>  53u8,
// };

